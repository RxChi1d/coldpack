name: CI

on:
  push:
    branches: ["**"]  # All branches
  pull_request:
    branches: [main]

jobs:
  lint:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.9", "3.10", "3.11", "3.12", "3.13"]
      fail-fast: false

    steps:
    - uses: actions/checkout@v4

    - name: Install uv
      uses: astral-sh/setup-uv@v6
      with:
        version: "latest"
        enable-cache: true

    - name: Set up Python ${{ matrix.python-version }}
      run: uv python install ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        uv sync --dev
        uv pip install -e .

    - name: Run ruff check
      run: uv run ruff check . --output-format=github

    - name: Run ruff format check
      run: uv run ruff format --check --diff .

  security:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Install uv
      uses: astral-sh/setup-uv@v6
      with:
        version: "latest"
        enable-cache: true

    - name: Set up Python
      run: uv python install 3.13

    - name: Install dependencies
      run: |
        uv sync --dev
        uv pip install -e .

    - name: Run bandit security scan
      run: uv run bandit -r src/ -f json -o bandit-report.json
      continue-on-error: true

    - name: Run safety dependency check
      run: uv run safety check --json --output safety-report.json
      continue-on-error: true

    - name: Upload security reports
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: security-reports
        path: |
          bandit-report.json
          safety-report.json

  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          # Ubuntu: 全面測試所有支援的Python版本
          - os: ubuntu-latest
            python-version: "3.9"
          - os: ubuntu-latest
            python-version: "3.10"
          - os: ubuntu-latest
            python-version: "3.11"
          - os: ubuntu-latest
            python-version: "3.12"
          - os: ubuntu-latest
            python-version: "3.13"
          # Windows: 測試關鍵版本（最低和最高支援版本）
          - os: windows-latest
            python-version: "3.9"
          - os: windows-latest
            python-version: "3.13"
          # macOS: 測試中間版本作為額外平台驗證
          - os: macos-latest
            python-version: "3.11"
      fail-fast: false

    steps:
    - uses: actions/checkout@v4

    - name: Install uv
      uses: astral-sh/setup-uv@v6
      with:
        version: "latest"
        enable-cache: true

    - name: Set up Python ${{ matrix.python-version }}
      run: uv python install ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        uv sync --dev
        uv pip install -e .

    - name: Run pytest with coverage
      run: uv run pytest -v --tb=short --cov=src/coldpack --cov-report=xml --cov-report=html --cov-report=term-missing

    - name: Upload coverage reports
      uses: actions/upload-artifact@v4
      if: matrix.os == 'ubuntu-latest' && matrix.python-version == '3.13'
      with:
        name: coverage-reports
        path: |
          coverage.xml
          htmlcov/

    - name: Run mypy
      run: |
        uv pip uninstall coldpack
        uv run mypy src/ tests/ --ignore-missing-imports
